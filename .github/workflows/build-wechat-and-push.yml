name: Build Wechat and Push Multi-arch Docker Image

# 定义触发条件，比如代码推送到main分支时触发
on:
  workflow_dispatch:

# 定义工作流中的作业
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # 设置环境变量
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/docker-wechat
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    # 定义作业中的步骤
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置Docker构建环境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录DockerHub
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # 构建Docker镜像（支持多平台）并输出日志到指定文件
      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --file Dockerfile-wechat -t $IMAGE_NAME . 2>&1 | tee build.log

      # 从构建日志文件中提取版本号
      - name: Extract version number from build logs
        id: extract_version
        run: |
          # 尝试从 build.log 文件中提取版本号
          VERSION=$(grep -oP '(?<=Unpacking wechat \()[^)]+' build.log)
          if [ -z "$VERSION" ]; then
            # 如果从 build.log 文件中提取失败，则使用年月日作为版本号
            VERSION=$(date +%Y%m%d)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # 给镜像打上版本标签
      - name: Tag Docker image with version
        run: |
          docker tag $IMAGE_NAME $IMAGE_NAME:${{ env.VERSION }}

      # 推送镜像
      - name: Push Docker image with tags
        run: |
          docker push $IMAGE_NAME
          docker push $IMAGE_NAME:${{ env.VERSION }}